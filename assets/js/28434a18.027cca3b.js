"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[4492],{8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(6540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}},9219:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"csta-api/state/snapShotDevice","title":"SnapShotDevice","description":"SnapShotDevice request","source":"@site/docs/csta-api/state/snapShotDevice.md","sourceDirName":"csta-api/state","slug":"/csta-api/state/snapShotDevice","permalink":"/api-documentation/docs/csta-api/state/snapShotDevice","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SnapShotDevice"},"sidebar":"tutorialSidebar","previous":{"title":"SetQueueMember","permalink":"/api-documentation/docs/csta-api/state/setQueueMember"},"next":{"title":"Events","permalink":"/api-documentation/docs/csta-api/events/"}}');var a=s(4848),r=s(8453);const o={title:"SnapShotDevice"},c=void 0,i={},p=[{value:"SnapShotDevice request",id:"snapshotdevice-request",level:2},{value:"SetDoNotDisturbResponse",id:"setdonotdisturbresponse",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"snapshotdevice-request",children:"SnapShotDevice request"}),"\n",(0,a.jsx)(t.p,{children:"This requests the current state of a trunk, user or queue."}),"\n",(0,a.jsx)(t.p,{children:"For trunks the snapshotObject is formatted as such:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",metastring:'title="SnapShotDevice request for trunk"',children:"<SnapShotDevice>\n  <snapshotObject>t-12345678</snapshotObject>\n  <privateData>\n    <requestID>101-null</requestID>\n  </privateData>\n</SnapShotDevice>\n"})}),"\n",(0,a.jsx)(t.p,{children:"For users the snapshotObject is formatted as such:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",metastring:'title="SnapShotDevice request for user"',children:"<SnapShotDevice>\n  <snapshotObject>u-12345678-200</snapshotObject>\n  <privateData>\n    <requestID>101-null</requestID>\n  </privateData>\n</SnapShotDevice>\n"})}),"\n",(0,a.jsx)(t.p,{children:"For queues the snapshotObject is formatted as such:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",metastring:'title="SnapShotDevice request for queue"',children:"<SnapShotDevice>\n  <snapshotObject>q-12345678-400</snapshotObject>\n  <privateData>\n    <requestID>101-null</requestID>\n  </privateData>\n</SnapShotDevice>\n"})}),"\n",(0,a.jsx)(t.h2,{id:"setdonotdisturbresponse",children:"SetDoNotDisturbResponse"}),"\n",(0,a.jsx)(t.p,{children:"The response returns information on the current state of the requested device or queue."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",metastring:'title="SetDoNotDisturbResponse"',children:'<SnapShotDeviceResponse xmlns="http://www.ecma.ch/standards/ecma-323/csta/ed6">\n  <serviceCrossRefID>u-12345678-200</serviceCrossRefID>\n  <snapshotData>\n    <snapshotDeviceResponseInfo />\n  </snapshotData>\n  <privateData>\n    <requestID>101-null</requestID>\n  </privateData>\n</SnapShotDeviceResponse>\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);